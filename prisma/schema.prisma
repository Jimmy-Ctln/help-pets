datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  image         String?
  shelter       Shelter?
  accounts      Account[]
  sessions      Session[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model Shelter {
  id          String          @id @default(cuid())
  name        String? 
  description String?
  address     String?
  city        String?
  postalCode  String?
  picture     String?
  phone       String?
  email       String?
  userId      String          @unique
 
  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  animals     Animal[]
}

model Animal {
  id            String   @id @default(cuid())
  name          String
  species       String
  breed         String?
  age           Int?
  birthday      DateTime?
  sex           String
  size          String?
  weight        Float?
  color         String?
  description   String?
  photos        String[]
  status        String  
  vaccinated    Boolean?
  identified    Boolean?
  chipNumber    String?
  sterilized    Boolean?
  compatibility String? 
  specialNeeds  String?
  shelterId     String
  shelter       Shelter  @relation(fields: [shelterId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

